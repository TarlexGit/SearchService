version: "3.8"

services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT}:9200
    environment:
      - node.name=es01
      - cluster.name=${CLUSTER_NAME}
      - cluster.initial_master_nodes=es01
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false # change 
    mem_limit: ${MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl http://localhost:9200/_cluster/health?pretty"
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    networks:
      - backend

  kibana:
    depends_on:
      es01:
        condition: service_healthy
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    volumes:
      - kibanadata:/usr/share/kibana/data
    ports:
      - ${KIBANA_PORT}:5601
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=https://es01:9200
      - ELASTICSEARCH_USERNAME=kibana_system
    mem_limit: ${MEM_LIMIT}
    networks:
      - backend

  meilisearch:
    image: getmeili/meilisearch:latest
    container_name: "meilisearch"
    environment:
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY:-nilsir}
    volumes:
      - ./data:/data/db:rw
    ports:
      - ${MEILISEARCH_PORT:-7700}:7700
    restart: always
    networks:
      - backend

  backend:
    build:
      context: web_app/backend/.
      dockerfile: Dockerfile
    volumes:
      - ./web_app/backend/:/backend/
    environment:
      - IP_ADDRES=${IP_ADDRES}
    command: poetry run python main.py

    depends_on:
      - meilisearch
      - kibana
      - es01
    ports:
      - 8000:8000
    networks:
      - backend

volumes:
  # certs:
  #   driver: local
  esdata01:
    driver: local
  kibanadata:
    driver: local

networks:
  # frontend:
  backend:
    external: true
